(* Geneated by functoria_test *)

let (>>=) x f = f x
let return x = x
let run x = x

module App_make__3 = App.Make(Key_gen)

let sys__1 = lazy (
# 24 "lib/functoria/argv.ml"
  return Sys.argv
);;
# 13 "test/main.ml"

let key_gen__2 = lazy (
  let __sys__1 = Lazy.force sys__1 in
  __sys__1 >>= fun _sys__1 ->
# 51 "lib/functoria/job.ml"
  return Functoria_runtime.(with_argv (runtime_args ()) "foo" _sys__1)
);;
# 21 "test/main.ml"

let app_make__3 = lazy (
  let __key_gen__2 = Lazy.force key_gen__2 in
  __key_gen__2 >>= fun _key_gen__2 ->
  App_make__3.start _key_gen__2
);;
# 28 "test/main.ml"

let () =
  let t = Lazy.force app_make__3 in
  run t
;;
