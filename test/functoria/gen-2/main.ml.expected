(* Geneated by functoria_test *)

let (>>=) x f = f x
let return x = x
let run x = x


module App_make__4 = App.Make(struct end)(Unit)

let sys__1 = lazy (
# 24 "lib/functoria/argv.ml"
  return Sys.argv
);;

# 15 "test/main.ml"

let struct_end__2 = lazy (
  let __sys__1 = Lazy.force sys__1 in
  __sys__1 >>= fun _sys__1 ->
# 46 "lib/functoria/job.ml"
  return Functoria_runtime.(with_argv (runtime_args ()) "foo" _sys__1)
);;

# 24 "test/main.ml"

let unit__3 = lazy (
  return ()
);;

# 30 "test/main.ml"

let app_make__4 = lazy (
  let __struct_end__2 = Lazy.force struct_end__2 in
  let __unit__3 = Lazy.force unit__3 in
  __struct_end__2 >>= fun _struct_end__2 ->
  __unit__3 >>= fun _unit__3 ->
# 8 "test/functoria/gen-2/test.ml"
  App_make__4.start _struct_end__2 _unit__3
);;

# 41 "test/main.ml"

let () =
  let t = Lazy.force struct_end__2 >>= fun _ ->
  Lazy.force unit__3 >>= fun _ ->
  Lazy.force app_make__4 in
  run t
;;
