(* Geneated by functoria_test *)

let (>>=) x f = f x
let return x = x
let run x = x

module App_make__4 = App.Make(Key_gen)(Unit)

let sys__1 = lazy (
  return Sys.argv
  )

let key_gen__2 = lazy (
  let __sys__1 = Lazy.force sys__1 in
  __sys__1 >>= fun _sys__1 ->
  return Functoria_runtime.(with_argv (runtime_args ()) "foo" _sys__1)
  )

let unit__3 = lazy (
  return ()
  )

let app_make__4 = lazy (
  let __key_gen__2 = Lazy.force key_gen__2 in
  let __unit__3 = Lazy.force unit__3 in
  __key_gen__2 >>= fun _key_gen__2 ->
  __unit__3 >>= fun _unit__3 ->
  App_make__4.start _key_gen__2 _unit__3
  )

let () =
  let t =
  Lazy.force key_gen__2 >>= fun _ ->
    Lazy.force unit__3 >>= fun _ ->
    Lazy.force app_make__4
  in run t
